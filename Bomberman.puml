@startuml
'https://plantuml.com/class-diagram

abstract class Entity {
  #x : int
  #y : int
  #img : Image
  #remove: boolean
  +Entity(int xUnit, int yUnit, Image img)
  +isRemove()
  +setRemove(boolean remove)
  +void render(GraphicsContext gc)
  +void update()
  +getX()
  +getY()
  +setX(int x)
  +setY(int y)
}


abstract class AnimatedEntity {
  # MAX_ANIMATE: int  = 7500
  # animate: int
  +AnimatedEntity(int xUnit, int yUnit, Image img)
  #void animate()

}

abstract class Character {
  # alive: boolean
  # moving: boolean
  # velocityX: int
  # velocityY: int
  # direction: int
  + Character(int xUnit, int yUnit, Image img)
  + {abstract} void calculateMove()
  # abstract void kill()
  # abstract void afterKill()
  # abstract boolean canMove()
  + void move()
  + void resetVelocity()
  + void moveBack()
}

class Bomber {
  + Bomber(int x, int y, Image img)
  + void placeBomb()
  + void stay()
  + void chooseSprite()
}
abstract class Enemy {

}

class Bomb {
  - bomber: Bomber
  - timeLeft: int
  - flames: ArrayList<flame>
  + Bomb(int xUnit, int yUnit, Image img, Bomber bomber)
  + void countdown()
  + explode()
}

class Brick
class Wall
class Grass

abstract class Item
class SpeedItem
class FlameItem
class BombItem

AnimatedEntity <|-- Character
AnimatedEntity <|-- Bomb
AnimatedEntity -|> Entity
Character <-- Bomber
Character <-- Enemy
Entity <-- Grass
Entity <-- Brick
Entity <-- Wall



@enduml